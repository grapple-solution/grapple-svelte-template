# Default values for myapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


env: {}

# configuration for grapple ApplicationSet (gras)
gras-deploy: 
  enabled: true
  gras: {}
  grapi:
    # beimagetag: "v0.130"
    automigrate: true
    autorestartgruim: false
    discoveredrepos: true
    extraSecrets:
    - sintiozev-conn-credential
    ingress: true
    ssl: false
    sslissuer: letsencrypt-grapple-demo
    initContainers:
    - name: init-db
      spec:
        command:
        - bash
        - -c
        - sleep 5; while ! mysql -h $(host) -P $(port) -u $(username) -p$(password)
          -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; mysql -h
          $(host) -P $(port) -u $(username) -p$(password) -e "CREATE DATABASE IF
          NOT EXISTS sintiozev;";
        image: mysql
        name: init-db
    datasources:
    - name: sintiozev
      spec:
        mysql:
          database: sintiozev
          host: $(host)
          name: sintiozev
          password: $(password)
          port: $(port)
          url: ""
          user: $(username)
    models:
    - name: "utilisations"
      spec: 
        name: utilisations
        base: Entity
        properties:
          id:
            type: string
            id: true
            required: false
            generated: false
            defaultFn: uuid
          designation:
            type: string
          address:
            type: string
          area:
            type: number
          volume:
            type: number
          numberRooms:
            type: number
          costtypesId:
            type: string
          date:
            type: date
            defaultFn: now
    - name: "users"
      spec: 
        name: users
        base: Entity
        properties:
          id:
            type: string
            id: true
            required: false
            generated: false
            defaultFn: uuid
          name:
            type: string
            required: true
          address:
            type: string
          moveindate:
            type: date
          organisationsId:
            type: string
    - name: "organisations"
      spec: 
        name: organisations
        base: Entity
        properties:
          id:
            type: string
            id: true
            required: false
            generated: false
            defaultFn: uuid
          name:
            type: string
            required: true
    - name: "costtypes"
      spec: 
        name: costtypes
        base: Entity
        properties:
          id:
            type: string
            id: true
            required: false
            generated: false
            defaultFn: uuid
          name:
            type: string
            required: true
          rate:
            type: number
          baseprice:
            type: number
    relations:
    - name: "organisations"
      spec:
        relationName: "organisations"
        sourceModel: "Users"
        destinationModel: "Organisations"
        foreignKeyName: "organisationsId"
        relationType: "belongsTo"
        registerInclusionResolver: true
    - name: "costtypes"
      spec:
        relationName: "costtypes"
        sourceModel: "Utilisations"
        destinationModel: "Costtypes"
        foreignKeyName: "costtypesId"
        relationType: "belongsTo"
        registerInclusionResolver: true
    restcruds:
    - name: "restcrud"
      spec:
        datasource: "sintiozev"

  gruim:
    # uiimagetag: "0.1.38"
    ssl: false
    sslissuer: letsencrypt-grapple-demo
    style: '{"colors":{"primary":{"DEFAULT":"#34344A","fg":"#fff"},"accent":{"DEFAULT":"#CC5A71","fg":"#fff"}}}'
    config: ""
    additionalpackages: ""


replicaCount: 1

image:
  repository: app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
imagetest:
  repository: apptest
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
